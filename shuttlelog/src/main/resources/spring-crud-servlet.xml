<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Add support for component scanning -->
	<context:component-scan base-package="edu.bsu.shuttlelog" />

	<!-- Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven />

	<!-- Define Spring MVC view resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- Step 1: Define Database DataSource / connection pool -->
	<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://csor12c.dhcp.bsu.edu:3306/yliu12" />
		<property name="user" value="yliu12" />
		<property name="password" value="1234" />

		<!-- these are connection pool properties for C3P0 -->
		<property name="initialPoolSize" value="5" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="maxIdleTime" value="30000" />
	</bean>

	<!-- Step 2: Setup Hibernate session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="packagesToScan" value="edu.bsu.shuttlelog.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- Step 3: Setup Hibernate transaction manager -->
	<bean id="myTransactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Step 4: Enable configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="myTransactionManager" />

	<!-- Add support for reading web resources: css, images, js, etc ... -->


  <!--管理验证信息的bean-->
	<bean id="tokenManager" class="com.scienjus.authorization.manager.impl.DBTokenManager">
	       <!--Token失效时间-->
	       <property name="tokenExpireSeconds" value="36000" />
	       <!--数据源-->
	       <property name="dataSource" ref="myDataSource" />
	       <!--存储验证信息的表名-->
	       <property name="tableName" value="User" />
	       <!--存储Key的字段名-->
	       <property name="keyColumnName" value="USERNAME" />
	       <!--存储Token的字段名-->
	       <property name="tokenColumnName" value="TOKEN" />
	       <!--存储Token过期时间的字段名-->
	       <property name="expireAtColumnName" value="expire_at" />
	</bean>


	<mvc:interceptors>
	       <!--身份验证的拦截器-->
	       <bean id="authorizationInterceptor" class="com.scienjus.authorization.interceptor.AuthorizationInterceptor">
	              <!--验证信息存储的Http头-->
	              <property name="httpHeaderName" value="authorization" />
	              <!--验证信息通用前缀，例如Bearer-->
	              <property name="httpHeaderPrefix" value="" />
	              <!--验证失败时的错误信息-->
	              <property name="unauthorizedErrorMessage" value="Token Expired, please login again" />
	              <!--管理验证信息的bean-->
	              <property name="manager" ref="tokenManager" />
	       </bean>
	</mvc:interceptors>
 
</beans>











